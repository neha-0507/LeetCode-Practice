# Time Complexity - O(n)
# Space Complexity - O(1)
class Solution:
    def trap(self, height: List[int]) -> int:
        if(height==None and len(height)==0):
            return 0
        leftWall,rightWall=0,0
        left=0
        right=len(height)-1
        amount=0
        while(left<=right):
            if(leftWall<rightWall):
                if(leftWall<height[left]):
                    leftWall=height[left]
                else:
                    amount+=leftWall-height[left]
                left+=1
            else:
                if(rightWall<height[right]):
                    rightWall=height[right]
                else:
                    amount+=rightWall-height[right]
                right-=1
        return amount
