# Time Complexity - o(nlogn)
# Space Complexity - o(n)
class Solution:
    def hIndex(self, citations: List[int]) -> int:
        if(citations==None or len(citations)==0):
            return 0
        num=sorted(citations)
        n=len(citations)
        for i in range(len(num)):
            val=num[i]
            diff=n-i
            if(diff<=val):
                return n-i
        return 0
                
  
  
 # Time Complexity - o(n)
 class Solution:
    def hIndex(self, citations: List[int]) -> int:
        if(citations==None or len(citations)==0):
            return 0
        n=len(citations)
        arr=[0]*(n+1)
        sum=0
        for i in range(len(citations)):
            if(citations[i]<n):
                arr[citations[i]]+=1
            else:
                arr[-1]+=1
        for i in range(len(arr)-1,-1,-1):
            sum+=arr[i]
            if(sum>=i):
                return i
        return 0
                
